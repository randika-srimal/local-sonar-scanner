services:
    sonarqube-postgres:
        image: 'postgres:15.3'
        ports:
            - '${FORWARD_SONARQUBE_POSTGRES_PORT:-5432}:5432'
        environment:
            POSTGRES_PASSWORD: postgres
        networks:
            - sonar
        volumes:
            - 'sonarqube-postgres-data:/var/lib/postgresql/data'
    sonarqube-adminer:
        image: 'adminer:latest'
        restart: always
        ports:
            - '${FORWARD_SONARQUBE_ADMINER_PORT:-9001}:8080'
        networks:
            - sonar
        depends_on:
            - sonarqube-postgres
    sonarqube:
        image: 'sonarqube:25.2.0.102705-community'
        environment:
            SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
            SONAR_JDBC_USERNAME: postgres
            SONAR_JDBC_PASSWORD: postgres
            SONAR_JDBC_URL: 'jdbc:postgresql://sonarqube-postgres:5432/sonar'
        ports:
            - '${FORWARD_SONARQUBE_PORT:-9000}:9000'
        networks:
            - sonar
        volumes:
            - 'sonarqube-data:/opt/sonarqube/data'
            - 'sonarqube-logs:/opt/sonarqube/logs'
            - 'sonarqube-extensions:/opt/sonarqube/extensions'
        depends_on:
            - sonarqube-postgres
    sonarqube-scanner:
        image: 'sonarsource/sonar-scanner-cli:11.2.1.1844_7.0.2'
        command: 'tail -F /dev/null'
        platform: linux/amd64
        environment:
            SONAR_HOST_URL: 'http://sonarqube:9000'
            SONAR_SCANNER_OPTS: '-Dsonar.projectKey=${SONARQUBE_PROJECT_KEY}'
            SONAR_TOKEN: '${SONARQUBE_PROJECT_TOKEN}'
        volumes:
            - '${PROJECT_DIRECTORY_PATH}:/usr/src'
        networks:
            - sonar
        depends_on:
            - sonarqube
    sonarqube-scripts:
        build:
            context: .
            dockerfile: Dockerfile.scripts
        container_name: sonarqube-scripts
        environment:
            SONARQUBE_PROJECT_KEY: '${SONARQUBE_PROJECT_KEY}'
            SONARQUBE_PROJECT_TOKEN: '${SONARQUBE_PROJECT_TOKEN}'
        volumes:
            - ./:/home
        networks:
            - sonar
        command: tail -F /dev/null
networks:
    sonar:
        driver: bridge
volumes:
    sonarqube-postgres-data:
        driver: local
    sonarqube-data:
        driver: local
    sonarqube-logs:
        driver: local
    sonarqube-extensions:
        driver: local
